/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok-mapstruct-binding
    implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //implementation 'jackson-databind:com.fasterxml.jackson.core'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'org.postgresql:postgresql'
    //implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.2.0'
    implementation 'org.apache.lucene:lucene-core:9.7.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    useJUnitPlatform()
}

group = 'org.test'
version = '1.4-SNAPSHOT'
description = 'showtime'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
